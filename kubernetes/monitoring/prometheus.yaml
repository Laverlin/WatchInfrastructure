## Create Cluster Role for Prometheus
##
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/metrics
  - nodes/proxy
  - nodes/stats
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["get"]
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics", "/metrics/cadvisor"]
  verbs: ["get"]
---

## Create Service Account
##
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: monitoring
---

## Bind Role to account
##
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: monitoring
---

# Prometheus pod deployment
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      containers:
        - name: prometheus
          image: prom/prometheus
          ports:
            - containerPort: 9090
          imagePullPolicy: 'IfNotPresent'
          volumeMounts:
            - mountPath: /etc/prometheus/
              name: prom-config
            - mountPath: /prometheus
              name: prom-data
          securityContext:
            runAsUser: 0
            privileged: true
          resources:
            requests:
              memory: "100Mi"
          #     cpu: "250m"
      volumes:
        - name: prom-config
          hostPath:
            path: /shared-data/configs/prometheus
            type: Directory
        - name: prom-data
          hostPath:
            path: /shared-data/persist/prometheus
            type: DirectoryOrCreate
---

# service
#
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: monitoring
spec:
  selector:
    app: prometheus
  ports:
  - name: prom-port
    protocol: TCP
    port: 9090
    nodePort: 30909
  type: NodePort
