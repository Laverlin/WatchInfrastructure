#####################################
## Default Route (/)
##
# apiVersion: traefik.containo.us/v1alpha1
# kind: IngressRoute
# metadata:
#   name: default-routing
#   namespace: watch-backend
# spec:
#   entryPoints:
#     - websecure
#   routes:
#   - match: PathPrefix(`/`)
#     kind: Rule
#     services:
#     - name: watch-api-micro
#       port: 88
#   tls: {}

# ---

####################################
# Default Route to handle error 404 (/)
#
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: error404
  namespace: watch-backend
spec:
  errors:
    status:
      - "404"
    query: /error404.html
    service:
      name: watch-api-micro
      port: 88
---

apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: default-routing
  namespace: watch-backend
spec:
  entryPoints:
    - websecure
  routes:
  - match: HostRegexp(`{host:.+}`)
    kind: Rule
    middlewares:
    - name: error404
    services:
    - name: watch-api-micro
      port: 88
  tls: {}

---

#####################################
## Route to legacy WF API
##
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: legacywf-routing
  namespace: watch-backend
spec:
  entryPoints:
    - websecure
  routes:
  - match: PathPrefix(`/garminapi/wf-service`)
    kind: Rule
    services:
    - name: watch-api-mono
      port: 88
  tls: {}

---

#####################################
## Route to YAS Sail app API
##
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: yasail-routing
  namespace: watch-backend
spec:
  entryPoints:
    - websecure
  routes:
  - match: PathPrefix(`/garminapi/routelist`)
    kind: Rule
    services:
    - name: watch-api-micro
      port: 88
  tls: {}

---

#####################################
## Canary deployment watch-api routes
##
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: watch-api-routing
  namespace: watch-backend
spec:
  entryPoints:
    - websecure
  routes:
  - match: PathPrefix(`/watch-api`)
    kind: Rule
    services:
    - name: watch-api-wrr
      port: 88
      kind: TraefikService
  tls: {}
---

apiVersion: traefik.containo.us/v1alpha1
kind: TraefikService
metadata:
  name: watch-api-wrr
  namespace: watch-backend
spec:
  weighted:
    services:
      - name: watch-api-mono
        port: 88
        weight: 0
      - name: watch-api-micro
        port: 88
        weight: 10
---

#####################################
## Direct Route to Micro
##
## Middleware
##
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: micro-redirect
  namespace: watch-backend
spec:
 replacePathRegex:
    regex: ^/micro/(.*)
    replacement: /$1
---

## Route Rule
##
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: watch-api-micro
  namespace: watch-backend
spec:
  entryPoints:
    - websecure
  routes:
  - match: PathPrefix(`/micro`)
    kind: Rule
    middlewares:
    - name: micro-redirect
    services:
    - name: watch-api-micro
      port: 88
  tls: {}
---

#####################################
## Direct Route to MONO
##
## Middleware
##
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: mono-redirect
  namespace: watch-backend
spec:
 replacePathRegex:
    regex: ^/mono/(.*)
    replacement: /$1
---

## Route
##
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: watch-api-mono
  namespace: watch-backend
spec:
  entryPoints:
    - websecure
  routes:
  - match: PathPrefix(`/mono`)
    kind: Rule
    middlewares:
    - name: mono-redirect    
    services:
    - name: watch-api-mono
      port: 88
  tls: {}
---

#### Kubernetes dashboard routing
####
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: dashboard-kuber
  namespace: kubernetes-dashboard
spec:
 replacePathRegex:
    regex: ^/dashboard/kuber(/|\b)(.*)
    replacement: /$2
---

apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: dashboard-kuber
  namespace: kubernetes-dashboard
spec:
  entryPoints:
  - websecure
  routes:
  - match: PathPrefix(`/dashboard/kuber/`)
    kind: Rule
    middlewares:
    - name: dashboard-kuber
    services:
    - name: kubernetes-dashboard
      port: 8443
      scheme: https
  tls: {}
---

### test routing
###
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: test-routing
  namespace: default
spec:
  entryPoints:
    - websecure
  routes:
  - match: PathPrefix(`/whoami`)
    kind: Rule
    services:
    - name: whoami
      port: 80
  tls: {}
