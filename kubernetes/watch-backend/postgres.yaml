apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-azuredisk
  namespace: watch-backend
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 30Gi
  volumeName: pv-azuredisk
  storageClassName: managed-csi
---

# Postgres deployment
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: watch-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: pg-server
          image: postgres:alpine
          imagePullPolicy: 'IfNotPresent'
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: secret-data
                  key: PG_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secret-data
                  key: PG_PASS
          resources:
            requests:
              memory: "100Mi"
              cpu: ".2"
            limits:
              memory: "400Mi"
              cpu: ".9"
          securityContext:
            runAsUser: 0
            privileged: true
          volumeMounts:
             - mountPath: /var/lib/postgresql/data
               name: postgres-data
               subPath: pg-data
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: pvc-azuredisk
---

# service
#
apiVersion: v1
kind: Service
metadata:
  name: pg-server
  namespace: watch-backend
spec:
  selector:
    app: postgres
  ports:
    - port: 5432
