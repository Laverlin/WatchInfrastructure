- name: Deploy helm charts 
  hosts: localhost
  tasks:

    - debug:
        msg: "Current Environment: {{ secret_vars.deploy_env }}"

    # нужно, чтобы helm правильно определял обновилась версия чарта или нет
    #
    - name: Install Helm Diff
      tags: ["kube", "base"]
      become: false
      kubernetes.core.helm_plugin:
        plugin_path: "https://github.com/databus23/helm-diff"
        state: present

    - name: deploy helm charts
      kubernetes.core.helm:
        kubeconfig: '~/remote-kube/{{ ansible_host }}/config'
        name: '{{ item.helmName }}'
        chart_ref: '../../helm/{{ item.helmName }}'
        values_files: 
          - '../../helm/secret.{{ secret_vars.deploy_env }}-values.yaml'
        release_namespace: '{{ item.namespace }}'
        create_namespace: true
        wait: '{{ item.isWait }}'

      loop:
        - { helmName: 'acme-sh', namespace: 'ingress', isWait: true }
        - { helmName: 'traefik', namespace: 'ingress', isWait: false }
        - { helmName: 'minio', namespace: 'database', isWait: false }
        - { helmName: 'postgres', namespace: 'database', isWait: false }
        - { helmName: 'kafka', namespace: 'database', isWait: false }
        - { helmName: 'keycloak', namespace: 'monitoring', isWait: false }
        # - { helmName: 'kubernetes-dashboard', namespace: 'monitoring', isWait: false }
        - { helmName: 'prom-stack', namespace: 'monitoring', isWait: false }
        - { helmName: 'loki', namespace: 'monitoring', isWait: false }
        - { helmName: 'tempo', namespace: 'monitoring', isWait: false }
        - { helmName: 'otel-collector', namespace: 'monitoring', isWait: false }
        - { helmName: 'watch-api-mono', namespace: 'watch-backend', isWait: false }
        - { helmName: 'watch-micro', namespace: 'watch-backend', isWait: false }
        - { helmName: 'watch-yas', namespace: 'watch-yas', isWait: false }
#        - { helmName: 'vpn-server', namespace: 'tools', isWait: false }
#        - { helmName: 'wireguard', namespace: 'tools', isWait: false , deploy: 'prod' }
        - { helmName: 'promtail', namespace: 'monitoring', isWait: false }

        # - { helmName: 'btsync', namespace: 'tools', isWait: false }  
        # - { helmName: 'home-assist', namespace: 'tools', isWait: false, deploy: 'dev' }
        # - { helmName: 'qbt', namespace: 'tools', isWait: false, deploy: 'dev' }
        # - { helmName: 'plex', namespace: 'tools', isWait: false, deploy: 'dev' }
        # - { helmName: 'photoprism', namespace: 'tools', isWait: false, deploy: 'dev' }
        - { helmName: 'isplitapp', namespace: 'isplitapp', isWait: false }
        # - { helmName: 'sponsor-block', namespace: 'tools', isWait: false, deploy: 'dev' }
        # - { helmName: 'x3-ui', namespace: 'tools', isWait: false }
        
      when: "'deploy' not in item or item.deploy == secret_vars.deploy_env"