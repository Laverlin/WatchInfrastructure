## Setup master node 
##
- name: Setup primero master node
  hosts: master
  become: true
  become_method: sudo
  become_user: root
  gather_facts: true
  tasks:

    - name: Copy kube-system setup files
      become: false
      ansible.builtin.copy:
        src: ./../../kubernetes/kube-system
        dest: /home/{{ ansible_user }}/kubernetes
        force: yes 

    ## Init Cluster
    ##
    - name: Create Cluster Certificate
      shell: "kubeadm certs certificate-key > /home/{{ ansible_user }}/kubernetes/cert_key"
      args:
        creates: /home/{{ ansible_user }}/kubernetes/cert_key 
    
    - name: extract certificate key
      command: "cat /home/{{ ansible_user }}/kubernetes/cert_key"
      register:  certificate_key_output

    - name: Intilizing Kubernetes Cluster
      command: "kubeadm init --control-plane-endpoint={{ public_ip }} --pod-network-cidr=10.244.0.0/16 --cri-socket=unix:///run/containerd/containerd.sock --apiserver-cert-extra-sans={{ secret_vars.namecom_fqn }} --certificate-key={{ certificate_key_output.stdout }} --upload-certs"
      args:
        creates: /etc/kubernetes/manifests/kube-apiserver.yaml

    - name: Create directory for kube config.
      ansible.builtin.file: 
        path: /home/{{ ansible_user }}/.kube
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0755

    - name: Copy /etc/kubernetes/admin.conf to user home directory /home/{{ ansible_user }}/.kube/config
      ansible.builtin.copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/{{ ansible_user }}/.kube/config
        remote_src: yes
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0644

    - name: Remove the cache directory.
      ansible.builtin.file: 
        path: /home/{{ ansible_user }}/.kube/cache
        state: absent

    - name: Deploy Cloud Controller
      ansible.builtin.shell: "{{ item }}"
      become: false
      with_items:
        - kubectl apply -f ~/kubernetes/kube-system/cloud-controller.yaml

    ## install kube network
    ##

    - name: Create Pod Network & RBAC.
      become: false
      ansible.builtin.command: "{{ item }}"
      with_items:
         - kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml 

    - name: Get the token for joining the nodes with Kuberentes master.
      shell: "kubeadm token create  --print-join-command"
      register: kubernetes_join_command

    - name: Add join command to dummy host
      add_host:
        name:   "K8S_JOIN_HOLDER"
        join_command: "{{kubernetes_join_command.stdout_lines[0]}} --control-plane --certificate-key {{certificate_key_output.stdout}}"

    - debug:
        msg: "{{ hostvars['K8S_JOIN_HOLDER']['join_command'] }}"