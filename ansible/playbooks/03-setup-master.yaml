## Setup master node 
##
- name: Setup master node
  hosts: master
  become: true
  become_method: sudo
  become_user: root
  gather_facts: true
  tasks:

    - name: Copy kube-system setup files
      become: false
      ansible.builtin.copy:
        src: ./../../kubernetes/kube-system
        dest: /home/{{ ansible_user }}/kubernetes
        force: yes 

    ## Init Cluster
    ##
    - name: Intilizing Kubernetes Cluster
      command: "kubeadm init --pod-network-cidr=10.244.0.0/16 --cri-socket=unix:///run/containerd/containerd.sock --apiserver-cert-extra-sans={{ secret_vars.namecom_fqn }}"
      args:
        creates: /etc/kubernetes/manifests/kube-apiserver.yaml

    - name: Create directory for kube config.
      ansible.builtin.file: 
        path: /home/{{ ansible_user }}/.kube
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0755

    - name: Copy /etc/kubernetes/admin.conf to user home directory /home/{{ ansible_user }}/.kube/config
      ansible.builtin.copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/{{ ansible_user }}/.kube/config
        remote_src: yes
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0644

    - name: Remove the cache directory.
      ansible.builtin.file: 
        path: /home/{{ ansible_user }}/.kube/cache
        state: absent

    ## install kube network
    ##
    - name: Remove master/control roles
      #become_user: "{{ ansible_user }}"
      become: false
      ignore_errors: true
      command: "kubectl taint nodes --all node-role.kubernetes.io/control-plane- node-role.kubernetes.io/master-"

    - name: Create Pod Network & RBAC.
      #become_user: "{{ ansible_user }}"
      become: false
      ansible.builtin.command: "{{ item }}"
      with_items:
         - kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml 

    - name: Deploy Cloud Controller
      ansible.builtin.shell: "{{ item }}"
      become: false
      with_items:
        - kubectl apply -f ~/kubernetes/kube-system/cloud-controller.yaml

    - name: Install Azure Disk drivers
      ansible.builtin.shell: "{{ item }}"
      become: false
      with_items:
        - "kubectl create configmap azure-cred-file --from-literal=path=\"/etc/kubernetes/cloud-config/azure.json\" -n kube-system --dry-run -o yaml | kubectl apply -f -"
        - curl -skSL https://raw.githubusercontent.com/kubernetes-sigs/azuredisk-csi-driver/v1.20.0/deploy/install-driver.sh | bash -s v1.20.0 snapshot --

    - name: Variable substitution
      ansible.builtin.shell: 'sed "s|#%AZURE_DISK%#|{{ secret_vars.azure_disk }}|g" /home/{{ ansible_user }}/kubernetes/kube-system/azure-disk-template.yaml > /home/{{ ansible_user }}/kubernetes/kube-system/azure-disk.yaml'   

    - name: Install Azure Disk
      ansible.builtin.shell: "{{ item }}"
      become: false
      with_items:
        - kubectl apply -f ~/kubernetes/kube-system/azure-disk.yaml

    - name: Get the token for joining the nodes with Kuberentes master.
      shell: "kubeadm token create  --print-join-command"
      register: kubernetes_join_command

    - debug:
        msg: "{{ kubernetes_join_command.stdout }}"

    - name: Make sure ~/tmp is exists
      file:
        path: ~/tmp
        state: directory

    - name: Copy join command to local file
      become: false
      delegate_to: localhost
      ansible.builtin.copy:
        content: "{{ kubernetes_join_command.stdout_lines[0] }}"
        dest: ~/tmp/kubernetes_join_command