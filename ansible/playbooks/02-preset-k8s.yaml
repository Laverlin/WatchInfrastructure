## Install common Kubernetes modules 
##
- name: Install common Kubernetes modules 
  hosts: all
  become: true
  become_method: sudo
  become_user: root
  gather_facts: true
  tasks:

      ## Prepare OS
      ##
    - name: Disable swap for current session
      command: swapoff -a

    - name: Remove Swap entry from /etc/fstab.
      ansible.builtin.lineinfile:
        dest: /etc/fstab
        regexp: swap
        state: absent

    - name: update ip-tables for containerd
      ansible.builtin.lineinfile:
        path: /etc/modules-load.d/k8s.conf 
        line: "{{ item }}"
        create: yes
      with_items:
        - 'overlay'
        - 'br_netfilter'

    - name: refresh ip drivers
      ansible.builtin.command: "{{ item }}"
      with_items: 
        - modprobe overlay
        - modprobe br_netfilter

    - name: Configure sysctl params for Kubernetes.
      ansible.builtin.lineinfile:
        path: /etc/sysctl.d/99-kubernetes-cri.conf 
        line: "{{ item }}"
        create: yes
      with_items:
        - 'net.bridge.bridge-nf-call-iptables  = 1'
        - 'net.ipv4.ip_forward                 = 1'
        - 'net.bridge.bridge-nf-call-ip6tables = 1'

    - name: Configure module for containerd
      ansible.builtin.blockinfile:
        path: /etc/modules-load.d/containerd.conf 
        block: |
            overlay
            br_netfilter
        create: yes

    - name: Apply sysctl params without reboot
      command: sysctl --system

    ## Install containerd
    ##
    - name: Installing Prerequisites for Kubernetes
      ansible.builtin.apt: 
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
        state: present

    - name: Install containerd
      ansible.builtin.command: "{{ item }}"
      with_items: 
        - wget https://github.com/containerd/containerd/releases/download/v1.6.12/containerd-1.6.12-linux-amd64.tar.gz
        - tar Czxvf /usr/local containerd-1.6.12-linux-amd64.tar.gz
        - wget https://raw.githubusercontent.com/containerd/containerd/main/containerd.service
        - mv containerd.service /usr/lib/systemd/system/
        - wget https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64
        - install -m 755 runc.amd64 /usr/local/sbin/runc
      args:
        creates: /usr/local/sbin/runc


    - name: Create containerd config folder
      ansible.builtin.file:
        path: /etc/containerd
        state: directory

    - name: Configure containerd
      shell: "/usr/local/bin/containerd config default > /etc/containerd/config.toml"
      args:
        creates: /etc/containerd/config.toml

    - name: Configure containerd - fix CGroup
      shell: "sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml"

    - name: Enable containerd service, and start it
      ansible.builtin.systemd: 
        name: containerd
        state: restarted
        enabled: yes
        daemon-reload: yes
    # - name: Enable containerd service, and start it
    #   ansible.builtin.command: "{{ item }}"
    #   with_items: 
    #     - systemctl daemon-reload
    #     - systemctl enable --now containerd

    ## Install kube* modules
    ##
    - name: Add Google official GPG key
      ansible.builtin.apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add Kubernetes Repository
      ansible.builtin.apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main 
        state: present
        filename: kubernetes
        mode: 0600

    - name: Installing Kubernetes Cluster Packages.
      ansible.builtin.apt: 
        name:
          - kubeadm
          - kubectl
          - kubelet
        state: present

    - name: Enable service kubelet, and enable persistently
      ansible.builtin.service: 
        name: kubelet
        enabled: yes

    # ## Setup azure config file
    # ##
    # - name: Create cloud-config folder
    #   ansible.builtin.file:
    #     path: /etc/kubernetes/cloud-config
    #     state: directory

    # - name: Create file
    #   copy:
    #     dest: /etc/kubernetes/cloud-config/azure.json 
    #     force: yes
    #     content: |
    #       {
    #         "cloud": "AzurePublicCloud",
    #         "tenantId": "{{secret_vars.azure_tenant_id}}",
    #         "subscriptionId": "{{secret_vars.azure_subscription_id}}",
    #         "aadClientId": "{{secret_vars.azure_client_id}}",
    #         "aadClientSecret": "{{secret_vars.azure_client_secret}}",
    #         "resourceGroup": "{{secret_vars.azure_resourcegroup}}",
    #         "location": "{{secret_vars.location}}",
    #         "subnetName": "{{secret_vars.azure_subnet}}",
    #         "securityGroupName": "{{secret_vars.azure_nsg}}",
    #         "vnetName": "{{secret_vars.azure_vnet}}",
    #       }