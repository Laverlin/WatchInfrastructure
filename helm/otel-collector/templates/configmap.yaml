apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "otel-collector.fullname" . }}
  labels:
    {{- include "otel-collector.labels" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
data:
  allow-snippet-annotations: "false"
  config.yaml: |
    # Configure receivers
    # We only need otlp protocol on grpc, but you can use http, zipkin, jaeger, aws, etc.
    # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/receiver
    receivers:
      zipkin:
        endpoint: "localhost:{{ .Values.ports.zipkinReceiver }}"
      otlp:
        protocols:
          http:
            endpoint: 0.0.0.0:{{ .Values.ports.otelHttpPort }}
            cors:
              allowed_origins:
                - http://localhost:5173
                - https://{{ .Values.global.isplitDomain }}
                - https://{{ .Values.global.isplitApiDomain }}
              allowed_headers: ["*"]
              max_age: 7200            
          grpc:

    # Configure exporters
    exporters:
      # Export prometheus endpoint
      prometheus:
        endpoint: "0.0.0.0:{{ .Values.ports.prometheusExporter }}"

      # log to the console
      debug:

      loki:
        endpoint: http://loki:3100/loki/api/v1/push
        tls:
          insecure: true
        default_labels_enabled:
          exporter: false
          job: true

      # Export to a file
      file:
        path: /etc/output/logs.json

      otlp:
        endpoint: {{ .Values.tempo.server }}:{{ .Values.tempo.port }}
        tls:
          insecure: true


    # Configure processors (batch, sampling, filtering, hashing sensitive data, etc.)
    # https://opentelemetry.io/docs/collector/configuration/#processors
    processors:
      batch:

      resource:
        attributes:
        - action: insert
          key: loki.resource.labels
          value: os.type, service.version

    # Configure pipelines. Pipeline defines a path the data follows in the Collector
    # starting from reception, then further processing or modification and finally
    # exiting the Collector via exporters.
    # https://opentelemetry.io/docs/collector/configuration/#service
    # https://github.com/open-telemetry/opentelemetry-collector/blob/main/docs/design.md#pipelines
    service:
      pipelines:
        traces:
          receivers: [otlp, zipkin]
          processors: [batch]
          exporters: [otlp]
        metrics:
          receivers: [otlp]
          processors: [batch]
          exporters: [prometheus]
        logs:
          receivers: [otlp]
          processors: [resource]
          exporters: [loki]