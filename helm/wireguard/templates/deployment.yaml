apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "wireguard.fullname" . }}
  labels:
    {{- include "wireguard.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "wireguard.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "wireguard.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        # OAuthProxy container
        #
        # OAuth container
        #
        - name: oauth2-proxy
          image: quay.io/oauth2-proxy/oauth2-proxy:latest
          env:
          - name: OAUTH2_PROXY_PROVIDER
            value: oidc
          - name: OAUTH2_PROXY_EMAIL_DOMAINS
            value: "*"
          - name: OAUTH2_PROXY_HTTP_ADDRESS
            value: "0.0.0.0:{{ .Values.ports.oauth }}"
          - name: OAUTH2_PROXY_REVERSE_PROXY
            value: "true"
          - name: OAUTH2_PROXY_OIDC_ISSUER_URL
            value: "{{ .Values.global.oidcIssuerUrl }}"
          - name: OAUTH2_PROXY_REDIRECT_URL
            value: "https://{{ .Values.global.domainName }}{{ .Values.dashboardPath }}/oauth2/callback"
          - name: OAUTH2_PROXY_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: {{ include "wireguard.fullname" . }}
                key: clientId 
          - name: OAUTH2_PROXY_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ include "wireguard.fullname" . }}
                key: clientSecret 
          - name: OAUTH2_PROXY_COOKIE_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ include "wireguard.fullname" . }}
                key: cookieSecret 
          - name: OAUTH2_PROXY_UPSTREAMS
            value: http://localhost:51821/ # , http://localhost:80/whoami/
          - name: OAUTH2_PROXY_SSL_INSECURE_SKIP_VERIFY
            value: "true"
          - name: OAUTH2_PROXY_COOKIE_DOMAINS
            value: ".{{ .Values.global.domainName }},{{ .Values.global.domainName }},xps-gold"
          - name: OAUTH2_PROXY_INSECURE_OIDC_ALLOW_UNVERIFIED_EMAIL
            value: "true"
          - name: OAUTH2_PROXY_COOKIE_SECURE
            value: "false"
          # - name: OAUTH2_PROXY_COOKIE_REFRESH
          #   value: "4m"
          - name: OAUTH2_PROXY_PASS_AUTHORIZATION_HEADER
            value: "true"
          - name: OAUTH2_PROXY_SSL_UPSTREAM_INSECURE_SKIP_VERIFY
            value: "true"
          - name: OAUTH2_PROXY_OIDC_EMAIL_CLAIM
            value: email
          - name: OAUTH2_PROXY_GROUPS_CLAIM
            value: groups
          - name: OAUTH2_PROXY_ALLOWED_GROUPS
            value: {{ .Values.global.kcGroupWireguard | quote }}
          - name: OAUTH2_PROXY_SKIP_PROVIDER_BUTTON
            value: "true"
          - name: OAUTH2_PROXY_SET_AUTHORIZATION_HEADER
            value: "false"
          - name: OAUTH2_PROXY_WHITELIST_DOMAINS
            value: ".{{ .Values.global.domainName }},{{ .Values.global.domainName }},xps-gold"
          ports:
          - containerPort: {{ .Values.ports.oauth }}


        # wireguard container
        #
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          ports:
            - name: vpn-port
              containerPort: 51820
              protocol: UDP
            - name: ui-port
              containerPort: 51821
              protocol: TCP
          env:
            - name: WG_HOST
              {{- if eq .Values.global.deployEnv "dev" }}
              value: {{ .Values.global.publicIp }}
              {{- else }}
              value: {{ .Values.global.domainName }}
              {{- end }}
            - name: WG_PORT
              value: {{ .Values.ports.vpnPort | quote }}
            - name: WG_MTU
              value: {{ .Values.wgClient.mtu | quote }}
            - name: WG_PERSISTENT_KEEPALIVE
              value: {{ .Values.wgClient.keepAlive | quote }}
            - name: WG_DEFAULT_DNS
              value: {{ .Values.wgClient.dns | quote }}

          volumeMounts:
            - name: configs
              mountPath: /etc/wireguard
      volumes:
        - name: configs
          hostPath:
            path: {{ .Values.global.storageRoot }}/persist/wireguard
            type: DirectoryOrCreate
          


