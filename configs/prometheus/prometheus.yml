# my global config
global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
#
scrape_configs:
  - job_name: 'prometheus'
    static_configs:
    - targets: ['localhost:9090']

  - job_name: 'node'
    kubernetes_sd_configs:
      - role: endpoints
    relabel_configs:
      - source_labels: [__meta_kubernetes_endpoints_name]
        regex: 'node-exporter'
        action: keep
      - source_labels: [__meta_kubernetes_endpoint_node_name]
        regex: (.+)
        target_label: node_name
        replacement: ${1}

  - job_name: 'watch-server'
    static_configs:
    - targets: ['watch-api-mono.watch-backend:88']

  - job_name: 'otel-collector'
    scrape_interval: 10s
    static_configs:
    - targets: ['otel-collector:8889']
    - targets: ['otel-collector:8888']

  - job_name: 'traefik'
    kubernetes_sd_configs:
      - role: endpoints
    relabel_configs:
      - source_labels: [__meta_kubernetes_endpoints_name]
        action: keep
        regex: traefik
      - source_labels: [__meta_kubernetes_pod_container_port_name]
        action: keep
        regex: admin
      - source_labels: [__meta_kubernetes_pod_node_name]
        regex: (.+)
        replacement: ${1} 
        target_label: node_name
    metric_relabel_configs:
      # - regex: '(instance|job|protocol)'
      #   action: labeldrop
      - source_labels:
          - service
        regex: ^([^.]+)-(.*)-[^@]+@.*$
        replacement: ${1}
        target_label: namespace
      - source_labels:
          - service
        regex: ^[^.]+-(.*)-[^@]+@.*$
        replacement: ${1}
        target_label: service

  - job_name: 'tempo'
    static_configs:
    - targets: ['tempo:3200']

  - job_name: 'kafka'
    static_configs:
      - targets: ['kafka.watch-backend:9308']

  - job_name: 'kube-state-metrics'
    static_configs:
      - targets: ['kube-state-metrics.kube-system.svc.cluster.local:8080']



  - job_name: kubernetes-nodes-cadvisor
    scrape_interval: 10s
    scrape_timeout: 10s
    scheme: https  # remove if you want to scrape metrics on insecure port
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    kubernetes_sd_configs:
      - role: node
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      # Only for Kubernetes ^1.7.3.
      # See: https://github.com/prometheus/prometheus/issues/2916
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
    metric_relabel_configs:
      - action: replace
        source_labels: [id]
        regex: '^/machine\.slice/machine-rkt\\x2d([^\\]+)\\.+/([^/]+)\.service$'
        target_label: rkt_container_name
        replacement: '${2}-${1}'
      - action: replace
        source_labels: [id]
        regex: '^/system\.slice/(.+)\.service$'
        target_label: systemd_service_name
        replacement: '${1}'
